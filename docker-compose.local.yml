version: "3.8"

services:
  watchtower:
    image: containrrr/watchtower:latest-dev
    container_name: watchtower
    command:
      - "--label-enable"
      - "--interval"
      - "86400" # Changed from 30 to 86400 (24 hours) as a fallback
      - "--cleanup" # Added to remove old images
      - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/app/.docker/config.json:/root/.docker/config.json
    environment:
      - DOCKER_CONFIG=/root/.docker
      - TZ=UTC
    networks:
      - app-network

  traefik:
    image: traefik:v3.0
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      # - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - app-network

  db:
    image: postgres:14-alpine
    container_name: klark_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: klarkdb
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network

  minio:
    image: minio/minio
    container_name: klark_minio
    restart: unless-stopped
    command: server /data
    environment:
      MINIO_ROOT_USER: minio_username
      MINIO_ROOT_PASSWORD: minio_password
    volumes:
      - minio_data:/data
    networks:
      - app-network

  chroma:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: klark_chroma
    restart: unless-stopped
    volumes:
      - chroma_data:/chroma/chroma
    networks:
      - app-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`localhost`)"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.services.app.loadbalancer.server.port=3000"
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      BASE_URL: http://localhost:3000
      POSTGRES_USER: username
      DATABASE_URL: postgres://username:password@db:5432/klarkdb
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      RESEND_API_KEY: ${RESEND_API_KEY}
      EMAIL_FROM: ${EMAIL_FROM}
      OPEN_AI_MODEL: ${OPEN_AI_MODEL}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_VERBOSE: ${OPENAI_VERBOSE}
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minio_username
      MINIO_SECRET_KEY: minio_password
      MINIO_BUCKET: uploads
      CHROMA_URL: http://chroma:8000
      LAST_K_CHAT_HISTORY: 5
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
      NEXT_PUBLIC_POSTHOG_KEY: ${NEXT_PUBLIC_POSTHOG_KEY}
      NEXT_PUBLIC_POSTHOG_HOST: ${NEXT_PUBLIC_POSTHOG_HOST}
      NEXT_PUBLIC_COMING_SOON_MODE: false
      NODE_ENV: development
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
  minio_data:
  chroma_data:
