version: "3.8"

services:
  watchtower:
    image: containrrr/watchtower:latest-dev
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/app/.docker/config.json:/root/.docker/config.json
    environment:
      - DOCKER_CONFIG=/root/.docker
    networks:
      - app-network

  traefik:
    image: traefik:v3.0
    command:
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      # - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - app-network

  db:
    image: postgres:14-alpine
    container_name: klark_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network

  minio:
    image: minio/minio
    container_name: klark_minio
    restart: unless-stopped
    command: server /data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    networks:
      - app-network

  chroma:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: klark_chroma
    restart: unless-stopped
    volumes:
      - chroma_data:/chroma/chroma
    networks:
      - app-network

  app:
    image: registry.utho.io/bitnaysh/rajnykdhulapkar/klark:main
    # container_name: klark_app
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`klark.bitnaysh.com`)"
      - "traefik.http.routers.app.entrypoints=web"
      - "traefik.http.services.app.loadbalancer.server.port=3000"
      - "com.centurylinklabs.watchtower.enable=true"
    environment:
      BASE_URL: ${BASE_URL}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      RESEND_API_KEY: ${RESEND_API_KEY}
      EMAIL_FROM: ${EMAIL_FROM}
      OPEN_AI_MODEL: ${OPEN_AI_MODEL}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_VERBOSE: ${OPENAI_VERBOSE}
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
      CHROMA_URL: http://chroma:8000
      LAST_K_CHAT_HISTORY: ${LAST_K_CHAT_HISTORY}
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
      NEXT_PUBLIC_POSTHOG_KEY: ${NEXT_PUBLIC_POSTHOG_KEY}
      NEXT_PUBLIC_POSTHOG_HOST: ${NEXT_PUBLIC_POSTHOG_HOST}
      NEXT_PUBLIC_COMING_SOON_MODE: ${NEXT_PUBLIC_COMING_SOON_MODE}
      NODE_ENV: production
    # deploy:
    #   mode: replicated
    #   replicas: 2
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
  minio_data:
  chroma_data:
